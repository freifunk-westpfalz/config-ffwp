# the ff ip of the gateway
router id 10.198.2.1;  # edit for new gateway

# routing tables
table ffwp;

# filter to check ulas
function is_ula() {
 return (net ~ [ fc00::/7{48,64} ]);
}

function is_self() {
    return (proto = "static_ffwp");
}

filter ffwp_internal_export {
        if (proto = "local_ffwp") then accept;
        if (source != RTS_BGP) then reject; 
        if (is_ula() && proto != "static_ffwp") then accept;
        else reject;
}

# don't use kernel's routes for bird, but export bird's routes to kernel
protocol kernel {
 scan time 20;  # Scan kernel routing table every 20 seconds
 import none;  # Default is import all
 export all;
}

# This pseudo-protocol watches all interface up/down events.
protocol device {
 scan time 10;  # Scan interfaces every 10 seconds
}

# define our routes
protocol static static_ffwp {
 table ffwp;

    # reject route if announced from external
 route fdc6:c4fe:1de4::/48 reject;
};

protocol static local_ffwp {
    table ffwp;
    route fdc6:c4fe:1de4::/48 via "br-ffwp";
};


protocol pipe pipe_ffwp {
 peer table ffwp;
 import all;
    export none;
};

# template for internal routing
template bgp bgp_ibgp {
    table ffwp;
 local as 65242;
 source address fdc6:c4fe:1de4::c1;  # edit: own ip of gateway
    import all;
    export where source = RTS_BGP;
    #gateway direct;
    next hop self;
};
 
# icvpn template for hamburg03
template bgp bgp_icvpn {
 local as 65242;
 source address fec0::a:cf:0:55; # edit for new gateway
 table ffwp;
 import where is_ula();
 export where is_self() || (source = RTS_BGP);
};

# iBGP peerings
# (paalsteek: my guess would be other gateways for our AS

#protocol bgp gw01 from bgp_ibgp {
#    neighbor fdc6:c4fe:1de4::c1 as 65242; # edit: ip of remote gateway
#};

protocol bgp gw02 from bgp_ibgp {
    neighbor fdc6:c4fe:1de4::d1 as 65242; # edit: ip of remote gateway
};

# eBGP peerings

